#pragma checksum "D:\git\Practices\pract_03_06_20\pract_03_06_20\Views\Home\ChessPage.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "bb43a65eecd631d7961e8b39719e45df27b52e37"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_ChessPage), @"mvc.1.0.view", @"/Views/Home/ChessPage.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\git\Practices\pract_03_06_20\pract_03_06_20\Views\_ViewImports.cshtml"
using pract_03_06_20;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\git\Practices\pract_03_06_20\pract_03_06_20\Views\_ViewImports.cshtml"
using pract_03_06_20.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"bb43a65eecd631d7961e8b39719e45df27b52e37", @"/Views/Home/ChessPage.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a8621b8c29d6602c9aae7d197442818f83fefeed", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_ChessPage : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "p", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "r", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "b", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "n", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "k", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "q", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<!DOCTYPE html>\r\n<html lang=\"en\">\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb43a65eecd631d7961e8b39719e45df27b52e375131", async() => {
                WriteLiteral(@"
    <meta charset=""UTF-8"">
    <title>Title</title>
    <script>
        function Click(sender) {
            let first = sender.id;
            let second = document.getElementById(""to"").innerText;
            UpdateFrom(second);
            UpdateTo(first);
        }
        
        function UpdateTo(newArg) {
            let toBox = document.getElementById(""to"");
            toBox.innerText = newArg;
        }
        
        function UpdateFrom(newArg) {
            let fromBox = document.getElementById(""from"");
            fromBox.innerText = newArg;
        }
        
        function Switch() {
          
        }
        
        function Send() {
            let req = new XMLHttpRequest();
            let fromPos = document.getElementById(""from"").innerText;
            let toPos = document.getElementById(""to"").innerText;
            let state = document.getElementById(""selector"").value;
            req.open(""GET"", `/Home/CheckStep?arg=${state}_${fromPos}_${toPos}`);");
                WriteLiteral(@"
            req.send();
            req.onreadystatechange = function() {
                if(req.readyState === 4) {
                    document.getElementById(""answer"").innerText = req.responseText;
                }
            };
        }
    </script>
    <style>
        button{
            width: 50px;
            height: 50px;
        }
    </style>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb43a65eecd631d7961e8b39719e45df27b52e377547", async() => {
                WriteLiteral(@"
<div class=""content"">
    <table class=""field"">
        <tr><td><button id=""a1"" style=""background-color: black;"" onclick=""Click(this)""></button>
            <td/><td><button id=""a2"" style=""background-color: white;"" onclick=""Click(this)""></button>
            <td/><td><button id=""a3"" style=""background-color: black;"" onclick=""Click(this)""></button>
            <td/><td><button id=""a4"" style=""background-color: white;"" onclick=""Click(this)""></button>
            <td/><td><button id=""a5"" style=""background-color: black;"" onclick=""Click(this)""></button>
            <td/><td><button id=""a6"" style=""background-color: white;"" onclick=""Click(this)""></button>
            <td/><td><button id=""a7"" style=""background-color: black;"" onclick=""Click(this)""></button>
            <td/><td><button id=""a8"" style=""background-color: white;"" onclick=""Click(this)""></button></td></tr>
        <tr><td><button id=""b1"" style=""background-color: white;"" onclick=""Click(this)""></button>
            <td/><td><button id=""b2"" style=""b");
                WriteLiteral(@"ackground-color: black;"" onclick=""Click(this)""></button>
            <td/><td><button id=""b3"" style=""background-color: white;"" onclick=""Click(this)""></button>
            <td/><td><button id=""b4"" style=""background-color: black;"" onclick=""Click(this)""></button>
            <td/><td><button id=""b5"" style=""background-color: white;"" onclick=""Click(this)""></button>
            <td/><td><button id=""b6"" style=""background-color: black;"" onclick=""Click(this)""></button>
            <td/><td><button id=""b7"" style=""background-color: white;"" onclick=""Click(this)""></button>
            <td/><td><button id=""b8"" style=""background-color: black;"" onclick=""Click(this)""></button></td></tr>
        <tr><td><button id=""c1"" style=""background-color: black;"" onclick=""Click(this)""></button>
            <td/><td><button id=""c2"" style=""background-color: white;"" onclick=""Click(this)""></button>
            <td/><td><button id=""c3"" style=""background-color: black;"" onclick=""Click(this)""></button>
            <td/><td><button id=""c");
                WriteLiteral(@"4"" style=""background-color: white;"" onclick=""Click(this)""></button>
            <td/><td><button id=""c5"" style=""background-color: black;"" onclick=""Click(this)""></button>
            <td/><td><button id=""c6"" style=""background-color: white;"" onclick=""Click(this)""></button>
            <td/><td><button id=""c7"" style=""background-color: black;"" onclick=""Click(this)""></button>
            <td/><td><button id=""c8"" style=""background-color: white;"" onclick=""Click(this)""></button></td></tr>
        <tr><td><button id=""d1"" style=""background-color: white;"" onclick=""Click(this)""></button>
            <td/><td><button id=""d2"" style=""background-color: black;"" onclick=""Click(this)""></button>
            <td/><td><button id=""d3"" style=""background-color: white;"" onclick=""Click(this)""></button>
            <td/><td><button id=""d4"" style=""background-color: black;"" onclick=""Click(this)""></button>
            <td/><td><button id=""d5"" style=""background-color: white;"" onclick=""Click(this)""></button>
            <td/><td><b");
                WriteLiteral(@"utton id=""d6"" style=""background-color: black;"" onclick=""Click(this)""></button>
            <td/><td><button id=""d7"" style=""background-color: white;"" onclick=""Click(this)""></button>
            <td/><td><button id=""d8"" style=""background-color: black;"" onclick=""Click(this)""></button></td></tr>
        <tr><td><button id=""e1"" style=""background-color: black;"" onclick=""Click(this)""></button>
            <td/><td><button id=""e2"" style=""background-color: white;"" onclick=""Click(this)""></button>
            <td/><td><button id=""e3"" style=""background-color: black;"" onclick=""Click(this)""></button>
            <td/><td><button id=""e4"" style=""background-color: white;"" onclick=""Click(this)""></button>
            <td/><td><button id=""e5"" style=""background-color: black;"" onclick=""Click(this)""></button>
            <td/><td><button id=""e6"" style=""background-color: white;"" onclick=""Click(this)""></button>
            <td/><td><button id=""e7"" style=""background-color: black;"" onclick=""Click(this)""></button>
            ");
                WriteLiteral(@"<td/><td><button id=""e8"" style=""background-color: white;"" onclick=""Click(this)""></button></td></tr>
        <tr><td><button id=""f1"" style=""background-color: white;"" onclick=""Click(this)""></button>
            <td/><td><button id=""f2"" style=""background-color: black;"" onclick=""Click(this)""></button>
            <td/><td><button id=""f3"" style=""background-color: white;"" onclick=""Click(this)""></button>
            <td/><td><button id=""f4"" style=""background-color: black;"" onclick=""Click(this)""></button>
            <td/><td><button id=""f5"" style=""background-color: white;"" onclick=""Click(this)""></button>
            <td/><td><button id=""f6"" style=""background-color: black;"" onclick=""Click(this)""></button>
            <td/><td><button id=""f7"" style=""background-color: white;"" onclick=""Click(this)""></button>
            <td/><td><button id=""f8"" style=""background-color: black;"" onclick=""Click(this)""></button></td></tr>
        <tr><td><button id=""g1"" style=""background-color: black;"" onclick=""Click(this)""></butto");
                WriteLiteral(@"n>
            <td/><td><button id=""g2"" style=""background-color: white;"" onclick=""Click(this)""></button>
            <td/><td><button id=""g3"" style=""background-color: black;"" onclick=""Click(this)""></button>
            <td/><td><button id=""g4"" style=""background-color: white;"" onclick=""Click(this)""></button>
            <td/><td><button id=""g5"" style=""background-color: black;"" onclick=""Click(this)""></button>
            <td/><td><button id=""g6"" style=""background-color: white;"" onclick=""Click(this)""></button>
            <td/><td><button id=""g7"" style=""background-color: black;"" onclick=""Click(this)""></button>
            <td/><td><button id=""g8"" style=""background-color: white;"" onclick=""Click(this)""></button></td></tr>
        <tr><td><button id=""h1"" style=""background-color: white;"" onclick=""Click(this)""></button>
            <td/><td><button id=""h2"" style=""background-color: black;"" onclick=""Click(this)""></button>
            <td/><td><button id=""h3"" style=""background-color: white;"" onclick=""Click(thi");
                WriteLiteral(@"s)""></button>
            <td/><td><button id=""h4"" style=""background-color: black;"" onclick=""Click(this)""></button>
            <td/><td><button id=""h5"" style=""background-color: white;"" onclick=""Click(this)""></button>
            <td/><td><button id=""h6"" style=""background-color: black;"" onclick=""Click(this)""></button>
            <td/><td><button id=""h7"" style=""background-color: white;"" onclick=""Click(this)""></button>
            <td/><td><button id=""h8"" style=""background-color: black;"" onclick=""Click(this)""></button></td></tr>
    </table>
</div>
<div>
    <select");
                BeginWriteAttribute("onchange", " onchange=\"", 8179, "\"", 8190, 0);
                EndWriteAttribute();
                WriteLiteral(" id=\"selector\">\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb43a65eecd631d7961e8b39719e45df27b52e3715319", async() => {
                    WriteLiteral("Pawn");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_0.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb43a65eecd631d7961e8b39719e45df27b52e3716549", async() => {
                    WriteLiteral("Rook");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_1.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb43a65eecd631d7961e8b39719e45df27b52e3717779", async() => {
                    WriteLiteral("Bishop");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_2.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb43a65eecd631d7961e8b39719e45df27b52e3719011", async() => {
                    WriteLiteral("Knight");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb43a65eecd631d7961e8b39719e45df27b52e3720243", async() => {
                    WriteLiteral("King");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n        ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "bb43a65eecd631d7961e8b39719e45df27b52e3721473", async() => {
                    WriteLiteral("Queen");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n</select>\r\n</div>\r\n<div class=\"info\">\r\n    <div id=\"from\">from</div>\r\n    <div id=\"to\">to</div>\r\n    <button id=\"send\" onclick=\"Send()\">Send</button>\r\n    <div id=\"answer\"></div>\r\n</div>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
